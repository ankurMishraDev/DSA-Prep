-> complexities:-
best case: O(1)
worst case: 0(logN)

-> To apply binary search, first the data structure should be sorted rather in ascending or descending order.

-> For now let us assume that array is our data structure and it is sorted in ascending order so our equation will goes
like:-
i) find the middle element or the array, we can find the middle element by using relation:
midElement = (firstElement + lastElement)/2 this approach can be used, but it is not an optimal approach as the value
sum of value of first and last element may exceed the int data type range, hence, we will use
midElement = firstElement + (lastElement - firstElement)/2
ii)Check if the targetElement > midElement then search on the right side of midElement or else search on the left side
of midElement
iii) if midElement == targetElement then return it.

-> Order agnostic binary search here we will make minor changes in the binary search algo based on the sorted ascending/
descending order:
i) to find the order in which data has sorted just check array[0]>array[length-1] if it is true then data is sorted in
descending order otherwise in ascending order.


